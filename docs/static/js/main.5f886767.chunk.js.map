{"version":3,"sources":["App.js","index.js"],"names":["HotWallet","window","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClickArticle","event","el","target","article","closest","bodyRect","document","body","getBoundingClientRect","articleRect","url","getAttribute","top","Math","abs","setState","max","news","find","goToStory","open","state","rpc","then","balances","console","log","parent","err","URL","parse","host","replace","_this2","react_default","a","createElement","Grid","columns","divided","className","Row","Column","id","map","age","formatDistance","publishedAt","Date","addSuffix","key","data-url","onClick","title","getDomain","style","display","description","Button","size","color","image","backgroundImage","concat","format","React","PureComponent","Idiot","baseUrl","get","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.5f886767.chunk.js","sourcesContent":["import React from 'react'\nimport './App.css'\nimport URL from 'url'\nimport { Grid, Button } from 'semantic-ui-react'\nimport formatDistance from 'date-fns/formatDistance'\nimport format from 'date-fns/format'\n\nconst HotWallet = window.HotWallet\n\nclass App extends React.PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      article: this.props.news[0]\n    }\n\n    HotWallet.rpc('getBalances').then(function (balances) {\n      console.log('balances:', balances)\n    })\n\n    try {\n      console.log('parent document:', window.parent.document)\n      console.log('Oh no! Iframe has access to parent window.')\n    } catch (err) {\n      console.log('Iframe is sandboxed.')\n    }\n\n  }\n\n  getDomain(url) {\n    return URL.parse(url).host.replace('www.', '')\n  }\n\n  onClickArticle = event => {\n    const headerHeight = 58\n    const imageHeight = 225\n    const el = event.target\n    const article = el.closest('article')\n    const bodyRect = document.body.getBoundingClientRect()\n    const articleRect = article.getBoundingClientRect()\n    const url = article.getAttribute('data-url') || el.getAttribute('data-url')\n    const top = Math.abs(bodyRect.top) + articleRect.top - headerHeight - imageHeight\n    this.setState({\n      top: Math.max(top, 0),\n      article: this.props.news.find(article => article.url === url)\n    })\n  }\n\n  goToStory = event => {\n    const el = event.target\n    const url = el.closest('article').getAttribute('data-url') || el.getAttribute('data-url')\n    window.open(url, '_blank')\n  }\n\n  render() {\n    return (\n      <main>\n        <h1>Crypto News</h1>\n        <Grid columns={2} divided className=\"grid\">\n          <Grid.Row>\n            <Grid.Column id=\"left-pane\">\n              {this.props.news.map(article => {\n                const age = formatDistance(article.publishedAt, new Date(), { addSuffix: true })\n                return (\n                  <article\n                    key={article.url}\n                    data-url={article.url}\n                    onClick={this.onClickArticle}\n                  >\n                    <div>\n                      <span>{article.title}</span>\n                      <span className=\"age\">{age} &bull; {this.getDomain(article.url)}</span>\n                    </div>\n                    <div className=\"mobile-description\">\n                      <div\n                        style={{\n                          display: article.url === this.state.article.url ? 'block' : 'none'\n                        }}\n                      >\n                        <p>\n                          {article.description}\n                        </p>\n                        <p>\n                          <Button\n                            size=\"medium\"\n                            data-url={this.state.article.url}\n                            color=\"black\"\n                            onClick={this.goToStory}\n                          >Full article</Button>\n                        </p>\n                      </div>\n                    </div>\n                  </article>\n                )\n              })}\n            </Grid.Column>\n            <Grid.Column id=\"right-pane\">\n              <div\n                style={{\n                  top: this.state.top\n                }}\n              >\n                {this.state.article.image ?\n                  <div\n                    className=\"img\"\n                    style={{\n                      backgroundImage: `url(\"${this.state.article.image}\")`\n                    }}\n                  /> : ''}\n                <h2>{this.state.article.title}</h2>\n                <p>{format(this.state.article.publishedAt, 'eeee, MMMM do yyyy')}</p>\n                <p className=\"description\">{this.state.article.description}</p>\n                <p>\n                  {this.getDomain(this.state.article.url)}\n                </p>\n                <p>\n                  <Button\n                    size=\"huge\"\n                    data-url={this.state.article.url}\n                    color=\"black\"\n                    onClick={this.goToStory}\n                  >Read full article</Button>\n                </p>\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </main>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport Idiot from 'idiot'\n\nconst idiot = new Idiot({\n  baseUrl: 'https://api.hotwallet.com'\n})\n\nidiot.get('/news')\n  .then(news => {\n    ReactDOM.render(<App news={news} />, document.getElementById('root'))\n  })\n"],"sourceRoot":""}