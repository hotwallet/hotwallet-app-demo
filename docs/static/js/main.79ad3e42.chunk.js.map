{"version":3,"sources":["App.js","index.js"],"names":["HotWallet","window","App","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onClickArticle","event","el","target","url","closest","getAttribute","setState","article","news","find","goToStory","open","state","rpc","then","balances","console","log","parent","document","err","URL","parse","host","replace","_this2","react_default","a","createElement","Grid","columns","divided","className","Row","Column","id","map","age","formatDistance","publishedAt","Date","addSuffix","key","data-url","onClick","title","getDomain","style","display","description","Button","size","color","image","backgroundImage","concat","format","React","PureComponent","Idiot","baseUrl","get","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.79ad3e42.chunk.js","sourcesContent":["import React from 'react'\nimport './App.css'\nimport URL from 'url'\nimport { Grid, Button } from 'semantic-ui-react'\nimport formatDistance from 'date-fns/formatDistance'\nimport format from 'date-fns/format'\n\nconst HotWallet = window.HotWallet\n\nclass App extends React.PureComponent {\n  constructor(props) {\n    super(props)\n    this.state = {\n      article: this.props.news[0]\n    }\n\n    HotWallet.rpc('getBalances').then(function (balances) {\n      console.log('balances:', balances)\n    })\n\n    try {\n      console.log('parent document:', window.parent.document)\n      console.log('Oh no! Iframe has access to parent window.')\n    } catch (err) {\n      console.log('Iframe is sandboxed.')\n    }\n\n  }\n\n  getDomain(url) {\n    return URL.parse(url).host.replace('www.', '')\n  }\n\n  onClickArticle = event => {\n    const el = event.target\n    const url = el.closest('article').getAttribute('data-url') || el.getAttribute('data-url')\n    this.setState({\n      article: this.props.news.find(article => article.url === url)\n    })\n  }\n\n  goToStory = event => {\n    const el = event.target\n    const url = el.closest('article').getAttribute('data-url') || el.getAttribute('data-url')\n    window.open(url, '_blank')\n  }\n\n  render() {\n    return (\n      <main>\n        <h1>Crypto News</h1>\n        <Grid columns={2} divided className=\"grid\">\n          <Grid.Row>\n            <Grid.Column id=\"left-pane\">\n              {this.props.news.map(article => {\n                const age = formatDistance(article.publishedAt, new Date(), { addSuffix: true })\n                return (\n                  <article\n                    key={article.url}\n                    data-url={article.url}\n                    onClick={this.onClickArticle}\n                  >\n                    <div>\n                      <span>{article.title}</span>\n                      <span className=\"age\">{age} &bull; {this.getDomain(article.url)}</span>\n                    </div>\n                    <div className=\"mobile-description\">\n                      <p\n                        style={{\n                          display: article.url === this.state.article.url ? 'block' : 'none'\n                        }}\n                      >\n                        <div>\n                          {article.description}\n                        </div>\n                        <p>\n                          <Button\n                            size=\"medium\"\n                            data-url={this.state.article.url}\n                            color=\"black\"\n                            onClick={this.goToStory}\n                          >Full article</Button>\n                        </p>\n                      </p>\n                    </div>\n                  </article>\n                )\n              })}\n            </Grid.Column>\n            <Grid.Column id=\"right-pane\">\n              <div>\n                {this.state.article.image ?\n                  <div\n                    className=\"img\"\n                    style={{\n                      backgroundImage: `url(\"${this.state.article.image}\")`\n                    }}\n                  /> : ''}\n                <h2>{this.state.article.title}</h2>\n                <p>{format(this.state.article.publishedAt, 'eeee, MMMM do yyyy')}</p>\n                <p className=\"description\">{this.state.article.description}</p>\n                <p>\n                  {this.getDomain(this.state.article.url)}\n                </p>\n                <p>\n                  <Button\n                    size=\"huge\"\n                    data-url={this.state.article.url}\n                    color=\"black\"\n                    onClick={this.goToStory}\n                  >Read full article</Button>\n                </p>\n              </div>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </main>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport Idiot from 'idiot'\n\nconst idiot = new Idiot({\n  baseUrl: 'https://api.hotwallet.com'\n})\n\nidiot.get('/news')\n  .then(news => {\n    ReactDOM.render(<App news={news} />, document.getElementById('root'))\n  })\n"],"sourceRoot":""}